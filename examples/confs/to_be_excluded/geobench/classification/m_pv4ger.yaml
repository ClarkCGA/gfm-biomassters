seed_everything: 0
trainer:
  accelerator: 'gpu'
  devices: [0]
  logger: True # will use tensorboardlogger
  callbacks:
    - class_path: RichProgressBar
    - class_path: LearningRateMonitor
      init_args:
        logging_interval: epoch

  max_epochs: 1
  check_val_every_n_epoch: 1
  log_every_n_steps: 50
  enable_checkpointing: true
  default_root_dir: "/dccstor/geofm-finetuning/geobench/classification_v1.0"
data:
  class_path: MPv4gerNonGeoDataModule
  init_args:
    batch_size: 16
    num_workers: 1
    train_transform:
      - class_path: albumentations.HorizontalFlip
        init_args:
          p: 0.5
      - class_path: albumentations.Rotate
        init_args:
          limit: 30
          border_mode: 0 
          value: 0
          mask_value: 1
          p: 0.5
      - class_path: ToTensorV2
    data_root: "/dccstor/geofm-finetuning/geobench/classification_v1.0"
    bands: 
      - "RED"
      - "GREEN"
      - "BLUE"

model:
  class_path: ClassificationTask
  init_args:
    model_args:
      decoder: IdentityDecoder
      pretrained: true
      backbone: prithvi_vit_100
      bands:
        - RED
        - GREEN
        - BLUE
      num_classes: 2
    loss: ce
    model_factory: PrithviModelFactory
optimizer:
  class_path: torch.optim.AdamW
  init_args:
    lr: 6.e-5
    weight_decay: 0.05
lr_scheduler:
  class_path: ReduceLROnPlateau
  init_args:
    monitor: val/loss