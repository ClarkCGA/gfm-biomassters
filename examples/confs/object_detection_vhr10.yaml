# lightning.pytorch==2.1.1
seed_everything: 0
trainer:
  accelerator: auto
  strategy: auto
  devices: auto
  num_nodes: 1
  precision: 16-mixed
  logger: True # will use tensorboardlogger
  callbacks:
    - class_path: RichProgressBar
    - class_path: LearningRateMonitor
      init_args:
        logging_interval: epoch
  max_epochs: 100
  check_val_every_n_epoch: 1
  log_every_n_steps: 50
  enable_checkpointing: true
  default_root_dir: output/VHR10
data:
  class_path: terratorch.datamodules.TorchNonGeoDataModule
  init_args:
    transforms:
      - class_path: albumentations.augmentations.geometric.resize.Resize
        init_args:
          height: 224
          width: 224
      - class_path: ToTensorV2
    cls: torchgeo.datamodules.VHR10DataModule
    batch_size: 16
    num_workers: 8
    #constant_scale: 0.0001
    #dataset_bands:
    #  - BLUE
    #  - GREEN
    #  - RED
    #output_bands:
    #  - BLUE
    #  - GREEN
    #  - RED
    #  - NIR_NARROW
    #rgb_indices:
    #  - 2
    #  - 1
    #  - 0
    #train_data_root: data/VHR10/NWPU VHR-10 dataset/positive image set
    #train_label_data_root: data/VHR10/NWPU VHR-10 dataset/ground truth
    #val_data_root: data/VHR10/NWPU VHR-10 dataset/positive image set
    #val_label_data_root: data/VHR10/NWPU VHR-10 dataset/ground truth
    #test_data_root: data/VHR10/NWPU VHR-10 dataset/positive image set
    #test_label_data_root: data/VHR10/NWPU VHR-10 dataset/ground truth
    #train_split: data/VHR10/NWPU VHR-10 dataset/train_data.txt
    #test_split: data/VHR10/NWPU VHR-10 dataset/test_data.txt
    #val_split: data/VHR10/NWPU VHR-10 dataset/valid_data.txt
    #img_grep: "*_S2Hand.tif"
    #label_grep: "*_LabelHand.tif"
    #no_label_replace: -1
    #no_data_replace: 0
    # constant_scale: 1  # Default case
    #means:
    #  - 0.1412956
    #  - 0.13795798
    #  - 0.12353792
    #  - 0.30902815
    #  - 0.2044958
    #  - 0.11912015
    #stds:
    #  - 0.07406382
    #  - 0.07370365
    #  - 0.08692279
    #  - 0.11798815
    #  - 0.09772074
    #  - 0.07659938
    #num_classes: 1000
    #train_transform:
    #val_transform:
    #test_transform:
  dict_kwargs:
    root: data/VHR10
    split: positive
    download: True


model:
  class_path: terratorch.tasks.ObjectDetectionTask
  init_args:
    model_factory: ObjectDetectionModelFactory
    model_args:
      model: faster-rcnn  # Model name from TorchVision (one of faster-rcnn, fcos, or retinanet)
      backbone: resnet50  # One of resnet18, resnet34, resnet50, resnet101, resnet152, resnext50_32x4d, resnext101_32x8d, wide_resnet50_2, or wide_resnet101_2
      in_channels: 3  #
      num_classes: 1000  # Number of classes including background
      pretrained: true
      weights: true  # True for ImageNet weight, False for random
    freeze_backbone: false
    loss: ce
    class_names:  # Optional class names (Alphabetic order for generic classification dataset)
      - Fish pond
      - Grassland shrubland
      - Logging
      - Mining
      - Oil palm plantation
      - Other
      - Other large-scale plantations
      - Secondary forest
      - Small-scale agriculture
      - Small-scale mixed plantation
      - Small-scale oil palm plantation
      - Timber plantation

optimizer:
  class_path: torch.optim.AdamW
  init_args:
    lr: 1e-3
    weight_decay: 0.05

lr_scheduler:
  class_path: CosineAnnealingLR
  init_args:
    T_max: 20


